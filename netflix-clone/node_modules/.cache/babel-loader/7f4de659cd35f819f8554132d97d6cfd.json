{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Netflix clone JS\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    // if [], run once when the row loads, and don't run agian\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"row_poster\",\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.poster_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Netflix clone JS/netflix-clone/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","table","map","movie","poster_path","name","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,QAAQ,GAAE,sCAAhB;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAb,EAA4C;AAAA;;AACxC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,mBAAeS,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUN,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AAEH;;AACDD,IAAAA,SAAS;AACZ,GATQ,EASN,CAACJ,QAAD,CATM,CAAT;AAUAS,EAAAA,OAAO,CAACC,KAAR,CAAcR,MAAd;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACG;AAAA,sBAAMH,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAGCG,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACb;AAEA,QAAA,SAAS,EAAC,YAFV;AAGC,QAAA,GAAG,EAAG,GAAEf,QAAS,GAAEI,UAAU,GAAGW,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACC,WAAY,EAHvE;AAG0E,QAAA,GAAG,EAAED,KAAK,CAACE;AAHrF,SACKF,KAAK,CAACG,EADX;AAAA;AAAA;AAAA;AAAA,cADH;AAHD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAhCQjB,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\n\r\nconst base_url =\"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // if [], run once when the row loads, and don't run agian\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    console.table(movies);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n           <h2> {title}</h2>\r\n\r\n            <div className=\"row_posters\">\r\n            {/*row-posters */}\r\n\r\n            {movies.map(movie =>(\r\n                <img\r\n                key={movie.id}\r\n                className=\"row_poster\"\r\n                 src={`${base_url}${isLargeRow ? movie.poster_path : movie.poster_path}`} alt={movie.name} />\r\n            ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}